{% set name = "perl-io-socket-ssl" %}
{% set version = "2.066" %}
{% set sha256 = "0d47064781a545304d5dcea5dfcee3acc2e95a32e1b4884d80505cde8ee6ebcd" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: IO-Socket-SSL-2.066.tar.gz
  url: https://cpan.metacpan.org/authors/id/S/SU/SULLR/IO-Socket-SSL-2.066.tar.gz
  sha256: {{ sha256 }}
  patches:
    - fix_submodule_versions.patch

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
build:
  number: 0

requirements:
  host:
    - perl
    - perl-net-ssleay
    - perl-mozilla-ca
    #- perl-extutils-makemaker
    #- perl-scalar-util

  run:
    - perl
    - perl-net-ssleay
    - perl-mozilla-ca
    #- perl-scalar-util

test:
  # Perl 'use' tests
  imports:
    - IO::Socket::SSL
    - IO::Socket::SSL::Intercept
    - IO::Socket::SSL::PublicSuffix
    - IO::Socket::SSL::Utils

  # You can also put a file called run_test.pl (or run_test.py) in the recipe
  # that will be run at test time.

about:
  home: https://github.com/noxxi/p5-io-socket-ssl
  license: perl_5
  summary: 'Nearly transparent SSL encapsulation for IO::Socket::INET.'

extra:
  # these store the original arguments conda-skeleton was run with
  cpan_distribution: IO::Socket::SSL
  cpan_module: IO::Socket::SSL

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
