{% set name = "perl-io-compress-lzma" %}
{% set version = "2.087" %}
{% set sha256 = "34bffefa4bd294148938204a83a82f63c831c298432f61905f52666ea0dc7a60" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: IO-Compress-Lzma-2.087.tar.gz
  url: https://cpan.metacpan.org/authors/id/P/PM/PMQS/IO-Compress-Lzma-2.087.tar.gz
  sha256: {{ sha256 }}

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
build:
  number: 0

requirements:
  host:
    - perl
    - perl-compress-raw-lzma
    - perl-io-compress
    #- perl-extutils-makemaker

  run:
    - perl
    - perl-compress-raw-lzma
    - perl-io-compress

test:
  # Perl 'use' tests
  imports:
    - IO::Compress::Adapter::Lzip
    - IO::Compress::Adapter::Lzma
    - IO::Compress::Adapter::Xz
    - IO::Compress::Lzip
    - IO::Compress::Lzma
    - IO::Compress::Xz
    - IO::Uncompress::Adapter::UnLzip
    - IO::Uncompress::Adapter::UnLzma
    - IO::Uncompress::Adapter::UnXz
    - IO::Uncompress::UnLzip
    - IO::Uncompress::UnLzma
    - IO::Uncompress::UnXz

  # You can also put a file called run_test.pl (or run_test.py) in the recipe
  # that will be run at test time.

about:
  home: https://github.com/pmqs/IO-Compress-Lzma
  license: perl_5
  summary: 'Write lzma files/buffers'

extra:
  # these store the original arguments conda-skeleton was run with
  cpan_distribution: IO-Compress-Lzma
  cpan_module: IO-Compress-Lzma

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
