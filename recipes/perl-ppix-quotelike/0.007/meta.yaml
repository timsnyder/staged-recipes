{% set name = "perl-ppix-quotelike" %}
{% set version = "0.007" %}
{% set sha256 = "7c28e518fa95580b30b4e372a99a69745408c0433a39dd55b25dc761ce511510" %}

package:
  name: {{ name }}
  version: {{ version }}

source:
  fn: PPIx-QuoteLike-0.007.tar.gz
  url: https://cpan.metacpan.org/authors/id/W/WY/WYANT/PPIx-QuoteLike-0.007.tar.gz
  sha256: {{ sha256 }}

# If this is a new build for the same version, increment the build
# number. If you do not include this key, it defaults to 0.
build:
  number: 0

requirements:
  host:
    - perl
    - perl-ppi
    #- perl-constant
    #- perl-base
    #- perl-carp
    #- perl-test-more
    #- perl-scalar-util
    #- perl-encode
    #- perl-exporter
    #- perl-strict
    #- perl-warnings
    #- perl-list-util

  run:
    - perl
    - perl-ppi
    #- perl-base
    #- perl-strict
    #- perl-list-util
    #- perl-scalar-util
    #- perl-encode
    #- perl-exporter
    #- perl-carp
    #- perl-warnings
    #- perl-constant

test:
  # Perl 'use' tests
  imports:
    - PPIx::QuoteLike
    - PPIx::QuoteLike::Constant
    - PPIx::QuoteLike::Dumper
    - PPIx::QuoteLike::Token
    - PPIx::QuoteLike::Token::Control
    - PPIx::QuoteLike::Token::Delimiter
    - PPIx::QuoteLike::Token::Interpolation
    - PPIx::QuoteLike::Token::String
    - PPIx::QuoteLike::Token::Structure
    - PPIx::QuoteLike::Token::Unknown
    - PPIx::QuoteLike::Token::Whitespace
    - PPIx::QuoteLike::Utils

  # You can also put a file called run_test.pl (or run_test.py) in the recipe
  # that will be run at test time.

about:
  home: http://metacpan.org/pod/PPIx::QuoteLike
  license: perl_5
  summary: 'Parse Perl string literals and string-literal-like things.'

extra:
  # these store the original arguments conda-skeleton was run with
  cpan_distribution: PPIx::QuoteLike
  cpan_module: PPIx::QuoteLike

# See
# https://docs.conda.io/projects/conda-build for
# more information about meta.yaml
